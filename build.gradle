buildscript {
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'application'
    apply plugin: 'java'

    sourceCompatibility = 11

    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
    }

    dependencies {
        testImplementation 'com.github.hyperskill:hs-test:release-SNAPSHOT'
    }

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    sourceSets {
        main.java.srcDir 'src'
        test.java.srcDir 'test'
    }

    // Configure the main class for the executable JAR
    jar {
        manifest {
            attributes 'Main-Class': 'tictactoe.TicTacToeGUI'
        }
        // If you want to create a fat JAR that includes dependencies (not strictly needed for this project):
        // from {
        //     configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        // } 
        // It's often better to specify a base name for the JAR if not using 'application' plugin's distribution tasks
        // archiveBaseName = 'TicTacToeGame' // Example
    }

    // The application plugin also allows setting mainClassName directly for tasks like 'run' and distribution zips
    if (project.name != 'util') { // Apply only to the game subproject(s)
        mainClassName = 'tictactoe.TicTacToeGUI'
    }

    test {
        systemProperty "file.encoding", "utf-8"
        outputs.upToDateWhen { false }
    }

    compileJava.options.encoding = 'utf-8'
    tasks.withType(JavaCompile) {
        options.encoding = 'utf-8'
    }
}

project(':util') {
    dependencies {
        implementation 'com.github.hyperskill:hs-test:release-SNAPSHOT'
    }
}

configure(subprojects.findAll {it.name != 'util'}) {
    dependencies {
        testImplementation project(':util').sourceSets.main.output
        testImplementation project(':util').sourceSets.test.output
    }
}

wrapper {
    gradleVersion = '7.1.1'
}
